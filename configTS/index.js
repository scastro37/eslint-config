const RULES = {
    OFF: "off",
    ERROR: "error",
    WARN: "warn",
};

module.exports = {
    env: {
        browser: true,
        commonjs: true,
        es6: true,
        node: true,
        jest: true,
    },
    extends: [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:jsx-a11y/recommended",
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        "prettier",
    ],
    settings: {
        react: {
            version: "detect",
        },
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 8,
        ecmaFeatures: {
            jsx: true,
            experimentalObjectRestSpread: true,
        },
        sourceType: "module",
    },

    globals: {
        MyGlobal: true,
    },
    rules: {
        "no-console": RULES.ERROR,
        "no-template-curly-in-string": RULES.WARN,
        "no-alert": RULES.ERROR, // custom message (use E-UI Modal)
        "no-eq-null": RULES.ERROR,
        "no-eval": RULES.ERROR,
        "no-implied-eval": RULES.ERROR,
        "no-iterator": RULES.ERROR,
        "no-lone-blocks": RULES.ERROR,
        "no-loop-func": RULES.ERROR,
        "no-param-reassign": RULES.ERROR,
        "no-proto": RULES.ERROR,
        "no-return-assign": RULES.ERROR,
        "no-script-url": RULES.ERROR,
        "no-self-compare": RULES.ERROR,
        "no-unused-expressions": RULES.ERROR,
        "no-useless-concat": RULES.ERROR,
        "no-undefined": RULES.ERROR,
        curly: RULES.ERROR,
        eqeqeq: RULES.ERROR,
        "no-else-return": RULES.ERROR,
        "no-useless-return": RULES.ERROR,
        "no-duplicate-imports": RULES.ERROR,
        "no-var": RULES.ERROR,
        "prefer-const": RULES.ERROR,
        "prefer-spread": RULES.WARN,
        "prefer-template": RULES.ERROR,
        "no-await-in-loop": RULES.WARN,
        "no-unreachable-loop": RULES.WARN,

        '@typescript-eslint/ban-ts-ignore': [RULES.OFF],
        '@typescript-eslint/camelcase': [RULES.OFF],
        '@typescript-eslint/explicit-function-return-type': [RULES.OFF],
        '@typescript-eslint/interface-name-prefix': [RULES.OFF],
        '@typescript-eslint/no-explicit-any': [RULES.OFF],
        '@typescript-eslint/no-unused-expressions': [RULES.OFF],
        '@typescript-eslint/no-var-requires': [RULES.OFF],
        '@typescript-eslint/no-use-before-define': [RULES.OFF],
        'comma-dangle': [RULES.ERROR, 'always-multiline'],
        'no-async-promise-executor': [RULES.OFF],
        'no-empty-pattern': [RULES.OFF],
        'no-undef': [RULES.ERROR],
        'no-var': [RULES.ERROR],
        'object-curly-spacing': [RULES.ERROR, 'always'],
        quotes: [RULES.ERROR, 'double', { allowTemplateLiterals: true }],
        semi: [RULES.ERROR, 'always'],
        'spaced-comment': [RULES.OFF],
        'no-prototype-builtins': [RULES.OFF],
        'sort-keys': [RULES.OFF],
        'space-before-function-paren': [RULES.OFF],
        indent: [RULES.OFF],
    },
};